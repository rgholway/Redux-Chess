[{"/Users/richardholway/challenges/redux-second-chess/src/serviceWorker.js":"1","/Users/richardholway/challenges/redux-second-chess/src/App.js":"2","/Users/richardholway/challenges/redux-second-chess/src/features/chess/BoardContainer.js":"3","/Users/richardholway/challenges/redux-second-chess/src/features/chess/Board.js":"4","/Users/richardholway/challenges/redux-second-chess/src/features/chess/chessSlice.js":"5","/Users/richardholway/challenges/redux-second-chess/src/features/chess/ChessConstants.js":"6","/Users/richardholway/challenges/redux-second-chess/src/app/store.js":"7","/Users/richardholway/challenges/redux-second-chess/src/features/chess/Piece.js":"8","/Users/richardholway/challenges/redux-second-chess/src/features/chess/PieceConstants.js":"9","/Users/richardholway/challenges/redux-second-chess/src/features/chess/PromotionModal.js":"10","/Users/richardholway/challenges/redux-second-chess/src/index.js":"11"},{"size":5141,"mtime":1609541742691,"results":"12","hashOfConfig":"13"},{"size":214,"mtime":1609904474860,"results":"14","hashOfConfig":"13"},{"size":2,"mtime":1609552165141,"results":"15","hashOfConfig":"13"},{"size":4006,"mtime":1610073312860,"results":"16","hashOfConfig":"13"},{"size":7112,"mtime":1610073287147,"results":"17","hashOfConfig":"13"},{"size":15428,"mtime":1610040532280,"results":"18","hashOfConfig":"13"},{"size":192,"mtime":1609711368083,"results":"19","hashOfConfig":"13"},{"size":548,"mtime":1610038028442,"results":"20","hashOfConfig":"13"},{"size":32975,"mtime":1610075455915,"results":"21","hashOfConfig":"13"},{"size":1005,"mtime":1609907916397,"results":"22","hashOfConfig":"13"},{"size":644,"mtime":1609541742689,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1d4jrg5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/richardholway/challenges/redux-second-chess/src/serviceWorker.js",[],["50","51"],"/Users/richardholway/challenges/redux-second-chess/src/App.js",[],"/Users/richardholway/challenges/redux-second-chess/src/features/chess/BoardContainer.js",[],"/Users/richardholway/challenges/redux-second-chess/src/features/chess/Board.js",["52","53","54","55"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Piece from \"./Piece\";\nimport PromotionModal from \"./PromotionModal\";\nimport { selectBox } from \"./chessSlice\";\nimport { highlightPotentialMoves } from \"./chessSlice\";\n\nconst Board = ({ boxes, selectedPiece, turn, userTeam, preMove}) => {\n  const dispatch = useDispatch();\n\n  const handleClick = (id, isPotentialMove) => {\n    // Weird logic here because right now we are both teams. Once Stockfish is set up we will set the\n    //user team and the logic will be simpler\n    const selectedBox = selectBox(boxes, id)\n      if (selectedPiece?.team === turn && isPotentialMove) {\n        dispatch({ type: \"chess/movePiece\", payload: id });\n      } else if (selectedBox?.piece?.team === turn) {\n        dispatch({ type: \"chess/highlightPotentialMoves\", payload: id });\n      } else if (preMove?.selectedPiece || selectedBox?.piece?.team === 2) {\n        dispatch({ type: \"chess/preMovePiece\", payload: {selectedPiece: selectedBox?.piece?.id, selectedSquare: selectedBox?.id} });\n      }\n}\n  //   if (selectedPieceTeam === turn) {\n  //     if (!isPotentialMove) {\n  //       dispatch({ type: \"chess/highlightPotentialMoves\", payload: id });\n  //     } else {\n  //       console.log('what up')\n  //       dispatch({ type: \"chess/movePiece\", payload: id });\n  //     }\n  //   } else if (userTeam === selectedPieceTeam) {\n  //       dispatch({ type: \"chess/preMovePiece\", payload: id });\n  //     }\n  // };\n\n  const handleSelectPromotion = (pieceName, id) => {\n    dispatch({ type: \"chess/promotePiece\", payload: { pieceName, id } });\n  };\n  const boxMap = boxes?.map((box) => {\n    const preMoveStyle = box?.hasPiece ? '-100%' : '0%'\n    return (\n      <>\n        <div\n          key={box?.id}\n          id={box?.id}\n          className={box?.className}\n          onClick={() => handleClick(box?.id, box?.isPotentialMove)}\n          name={box?.name}\n          style={{\n            backgroundColor: box?.style?.backgroundColor,\n            borderTopLeftRadius: box?.style?.borderTopLeftRadius,\n            borderTopRightRadius: box?.style?.borderTopRightRadius,\n            borderBottomRightRadius: box?.style?.borderBottomRightRadius,\n            borderBottomLeftRadius: box?.style?.borderBottomLeftRadius,\n          }}\n          hasPiece={box?.hasPiece}\n        >\n          {box?.isPromotion && (\n            <PromotionModal\n              team={box?.piece?.team}\n              id={box?.id}\n              handleSelectPromotion={handleSelectPromotion}\n            />\n          )}\n          {box?.hasPiece && (\n            <Piece\n              key={box?.id}\n              id={box?.id}\n              highlightPotentialMoves={highlightPotentialMoves}\n              pieceName={box?.piece?.pieceName}\n              className={box?.piece?.className}\n              hasMoved={box?.piece?.hasMoved}\n              isAttacked={box?.piece?.isAttacked}\n              potentialMoves={box?.piece?.potentialMoves}\n              isKing={box?.piece?.isKing}\n              isKing={box?.piece?.isHorse}\n              isProtectingKing={box?.piece?.isProtectingKing}\n              isAttackingKing={box?.piece?.isAttackingKing}\n              rules={box?.piece?.rules}\n              team={box?.piece?.team}\n            />\n          )}\n          {box?.isPotentialMove && <div className=\"PotentialMove\" />}\n          {box?.id === preMove?.selectedPiece && <div className=\"PreMovePiece\" />}\n          {box?.id === preMove?.selectedMove && <div className=\"PreMoveBox\" style={{marginTop: preMoveStyle }} />}\n        </div>\n      </>\n    );\n  });\n\n  return <div className=\"board\">{boxMap}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    boxes: state?.state?.boxes,\n    selectedPiece: state?.state?.selectedPiece,\n    turn: state?.state?.turn,\n    userTeam: state?.state?.user?.team,\n    preMove: state?.state?.preMove,\n  };\n};\n\nexport default connect(mapStateToProps)(Board);\n","/Users/richardholway/challenges/redux-second-chess/src/features/chess/chessSlice.js",["56"],"/Users/richardholway/challenges/redux-second-chess/src/features/chess/ChessConstants.js",["57"],"/Users/richardholway/challenges/redux-second-chess/src/app/store.js",[],"/Users/richardholway/challenges/redux-second-chess/src/features/chess/Piece.js",["58","59","60"],"import React from \"react\";\nimport { rules } from \"./PieceConstants\";\nimport { useDispatch } from 'react-redux'\n\nconst Piece = ({\n  className,\n  pieceName,\n  id,\n  isAttacked,\n  potentialMoves,\n  isKing,\n  isHorse,\n  isProtectingKing,\n  isAttackingKing,\n  rules,\n  highlightPotentialMoves,\n}) => {\n  const dispatch = useDispatch()\n\nconst highlightMoves = (e) => {\n  // dispatch({type: 'chess/highlightPotentialMoves', payload: potentialMoves})\n}\n\n  const name = className || pieceName\n\n  return (<div className={name} />);\n};\n\nexport default Piece;\n",["61","62"],"/Users/richardholway/challenges/redux-second-chess/src/features/chess/PieceConstants.js",["63","64","65","66","67","68","69","70","71","72","73"],"/Users/richardholway/challenges/redux-second-chess/src/features/chess/PromotionModal.js",[],"/Users/richardholway/challenges/redux-second-chess/src/index.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"82","line":1,"column":28,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"83","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":28},{"ruleId":"84","severity":1,"message":"85","line":76,"column":15,"nodeType":"86","endLine":76,"endColumn":43},{"ruleId":"78","severity":1,"message":"87","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"78","severity":1,"message":"88","line":134,"column":7,"nodeType":"80","messageId":"81","endLine":134,"endColumn":16},{"ruleId":"78","severity":1,"message":"89","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":15},{"ruleId":"78","severity":1,"message":"90","line":18,"column":9,"nodeType":"80","messageId":"81","endLine":18,"endColumn":17},{"ruleId":"78","severity":1,"message":"91","line":20,"column":7,"nodeType":"80","messageId":"81","endLine":20,"endColumn":21},{"ruleId":"74","replacedBy":"92"},{"ruleId":"76","replacedBy":"93"},{"ruleId":"78","severity":1,"message":"94","line":332,"column":7,"nodeType":"80","messageId":"81","endLine":332,"endColumn":14},{"ruleId":"95","severity":1,"message":"96","line":362,"column":19,"nodeType":"97","messageId":"98","endLine":362,"endColumn":21},{"ruleId":"78","severity":1,"message":"99","line":384,"column":12,"nodeType":"80","messageId":"81","endLine":384,"endColumn":26},{"ruleId":"78","severity":1,"message":"100","line":548,"column":9,"nodeType":"80","messageId":"81","endLine":548,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":697,"column":12,"nodeType":"80","messageId":"103","endLine":697,"endColumn":13},{"ruleId":"78","severity":1,"message":"104","line":727,"column":7,"nodeType":"80","messageId":"81","endLine":727,"endColumn":20},{"ruleId":"78","severity":1,"message":"105","line":744,"column":7,"nodeType":"80","messageId":"81","endLine":744,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":765,"column":39,"nodeType":"108","messageId":"109","endLine":765,"endColumn":41},{"ruleId":"106","severity":1,"message":"107","line":765,"column":81,"nodeType":"108","messageId":"109","endLine":765,"endColumn":83},{"ruleId":"78","severity":1,"message":"110","line":802,"column":7,"nodeType":"80","messageId":"81","endLine":802,"endColumn":22},{"ruleId":"78","severity":1,"message":"111","line":812,"column":9,"nodeType":"80","messageId":"81","endLine":812,"endColumn":22},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'bindActionCreators' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'update' is defined but never used.","'makePiece' is assigned a value but never used.","'rules' is defined but never used.","'dispatch' is assigned a value but never used.","'highlightMoves' is assigned a value but never used.",["112"],["113"],"'options' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'potentialMoves' is assigned a value but never used.","'attackedFrom' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'calculateRook' is assigned a value but never used.","'filteredMoves' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'calculateBishop' is assigned a value but never used.","'pieceIsOnWall' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]